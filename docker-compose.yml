services:

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:4.1.0-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    volumes:
      - ./rabbitmq_data:/var/lib/rabbitmq
    networks:
      - ecommerce-net
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "ping" ]
      interval: 3s
      timeout: 3s
      retries: 3
  
  test-db:
    container_name: test-db
    image: postgres:17.4-alpine
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_DB=${USERS_DB_NAME}
      - POSTGRES_USER=${USERS_DB_USER}
      - POSTGRES_PASSWORD=${USERS_DB_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${USERS_DB_USER} -d ${USERS_DB_NAME}'" ]
      interval: 3s
      timeout: 3s
      retries: 3
    networks:
      - ecommerce-net

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - ecommerce-net

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki/loki-config.yml:/etc/loki/loki-config.yml
      - ./loki/loki-data:/loki
    networks:
      - ecommerce-net

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: "admin"
    depends_on:
      - prometheus
      - loki
    networks:
      - ecommerce-net

networks:
  ecommerce-net:
    external: true
